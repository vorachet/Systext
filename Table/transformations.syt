include "objects.syt"

import Table.* 
 
package TableTransformations { 
  
	m2t modelToJSBasedTableTransformer = M2TTransformation ( outputFileExtension: "html" ) {
		beforeText:  "
			<html>  
				<head>
					<style>
						table {
    						border-collapse: collapse;
						}
						table, th, td {
							padding: 10px;
   							border: 1px solid black;
						}
					</style>
					<script>
					function addRow(cIndex, rIndex, cellText) {
						var table = document.getElementById('tableEleId');
						var tableRef = document.getElementById('tableEleId').getElementsByTagName('tbody')[0];
						var numOfRows = table.rows.length;
						var numOfRow0Cells = table.rows[0].cells.length;
						if (cIndex > numOfRow0Cells) {
							return alert('cIndex is out of length table columns');
						}
						if (typeof table.rows[rIndex + 1] === 'undefined') {
							var targetRIndex = rIndex + 1
							if (numOfRows < targetRIndex) {
								var diff = targetRIndex - numOfRows + 1
								for(n=0; n < diff; n++) {
									var row = tableRef.insertRow(tableRef.rows.length);
									for(c=0; c<numOfRow0Cells; c++) {
										var cell = row.insertCell(c);
										cell.innerHTML = '';
									}
								}
							} else {
								var row = tableRef.insertRow(numOfRows - 1);
								for(c=0; c < numOfRow0Cells; c++) {
									var cell = row.insertCell(c);
									cell.innerHTML = '';
								}
							}
						}
						var cellToBeInserted = tableRef.rows[rIndex].cells[cIndex];
						cellToBeInserted.innerHTML += cellText + '<br>';
					}
					</script>
				</head>
			<body>
			" 
		afterText: "
			</body>
			</html>"  
		template: {
			metamodel: TableMetamodels.Table
			text: "
			<div align=\"center\">
			<p>Table.%no% %name%</p>
			<table id=\"tableEleId\">
				<thead>
					<tr>%columns%</tr>
				</thead>
				<tbody valign=\"top\"></tbody>
			</table>
			</div>
			<script>
				%cells%
			</script>
			"	
			varTemplate: {  
				varName: "%columns%"
				beforeText: "<th>"
				afterText: "</th>"
				joinText: ""
			}
		}
		template: {
			metamodel: TableMetamodels.Column
			text: "%name%"
		}
		template: {
			metamodel: TableMetamodels.Cell
			text: "
				addRow(%c.i%, %r%, '%name%');
			"
		}
	}
	
}
