include "metamodels.syt"
 
import GraphMetamodels.*
 
package GraphTransformations {
	
	m2t GrapToGraphDiagramTransformer = M2TTransformation(outputFileExtension: "html") {
		resource: "Resources/vis.min.js"  
		resource: "Resources/vis.min.css"
		beforeText:       
			"   
			<html>         
				<head>      
					<meta charset=\"utf-8\">    
  					<script type=\"text/javascript\" src=\"Resources/vis.min.js\"></script>
  					<link href=\"Resources/vis.min.css\" rel=\"stylesheet\" type=\"text/css\" />
  					<style>
    					#graph {  
      						width: 600px;
      						height: 400px;
    					}
  					</style>  
				</head>
				<body>  
					<div id=\"graph\"></div>  
					<script>
			"
		afterText:           
			"
  						var container = document.getElementById('graph');
  						var data = {
    						nodes: nodes,  
    						edges: edges  
  						};
  						var options = {  
							physics: {   
								enabled: true
							}  
						};    
  						var network = new vis.Network(container, data, options);
					</script>
				</body>
			</html>  
			"  
		template: { 
			metamodel: Graph  
			text:   
				"    
				var nodes = new vis.DataSet([ %nodes% ]);
				var edges = new vis.DataSet([ %edges% ]); 
				"  
		}   
		template: {    
			metamodel: Node         
			text:   
				"    
				{id: '%_id%', label: '%_id%', color: 'grey', font: {color: 'white', face: 'times', bold: true}},   
				"  
		}  
		template: {  
			metamodel: Edge  
			text:   
				"  
				{from: '%source._id%', to: '%target._id%', arrows:'to', label: '%label%', font: {face: 'times', bold: true}},
				"
		}
	}
	
	m2t NodeToGraphDiagramTransformer = M2TTransformation(outputFileExtension: "html") {
		resource: "Resources/vis.min.js"  
		resource: "Resources/vis.min.css"
		beforeText:     
			"   
			<html>         
				<head>      
					<meta charset=\"utf-8\">    
  					<script type=\"text/javascript\" src=\"Resources/vis.min.js\"></script>
  					<link href=\"Resources/vis.min.css\" rel=\"stylesheet\" type=\"text/css\" />
  					<style>
    					#graph {  
      						width: 600px;
      						height: 400px;
    					}
  					</style>  
				</head>
				<body>  
					<div id=\"graph\"></div>  
					<script>
						var nodeMap = new Map();
						var edgeMap = new Map();
						var nodeItems = [];
						var edgeItems = [];
			"
		  
		afterText:          
			"
						for (var [key, value] of nodeMap) {
							nodeItems.push(nodeMap.get(key))
						}

						for (var [key, value] of edgeMap) {
  							edgeItems.push(edgeMap.get(key))
						}

						var nodes = new vis.DataSet(nodeItems);
						var edges = new vis.DataSet(edgeItems); 
  						var container = document.getElementById('graph');
  						var data = {
    						nodes: nodes,  
    						edges: edges  
  						};
  						var options = {  
							physics: {   
								enabled: true
							}  
						};    
  						var network = new vis.Network(container, data, options);
					</script>
				</body>
			</html>  
			"    
		template: {    
			metamodel: Node         
			text:   
				"    
				%outgoing%
				%incomings%
				"  
		}  
		template: {  
			metamodel: Edge  
			text:  
				" 
						nodeMap.set('%source._id%', {id: '%source._id%', label: '%source._id%', color: 'grey', font: {color: 'white', face: 'times', bold: true}} )
						nodeMap.set('%target._id%', {id: '%target._id%', label: '%target._id%', color: 'grey', font: {color: 'white', face: 'times', bold: true}} )
						edgeMap.set('%_id%', {from: '%source._id%', to: '%target._id%', arrows:'to', label: '%label%', font: {face: 'times', bold: true}} )
				"
		}
	}
	
}